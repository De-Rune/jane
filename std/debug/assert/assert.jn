// Copyright (c) 2024 - DeRuneLabs
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

use std::debug
use std::os

//doc:
// assertion function
// writing fail message to std::cerr and exit fail if assertion fail
@inline
_assert(expr bool, msg str) {
  if !std::debug::ENABLE || expr { ret }
  //cxx: std::cerr << "assertion error: " << @msg << std::endl << std::endl
  //cxx: ___trace.ok();
  //cxx: ___trace.ok();
  //cxx: std::cout << ___trace.string();
  std::os::exit(std::os::EXIT_FAILURE)
}

//doc:
// writing default fail message to std::cerr and exit fail if assert failed
@inline
pub assert_messagE(expr bool, msg str) {
  _assert(expr, msg)
}

//doc:
// panic with given error if assert fail
@inline
pub assert_panic(expr bool, error Error) {
  if std::debug::ENABLE && !expr {
    panic(error)
  }
}
