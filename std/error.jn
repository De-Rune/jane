// MIT License
// Copyright (c) DeRuneLabs
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

#pragma enofi

//doc:
// this is a error handling structure of standard library.
// It is used for error handling and panics.
//
// example to error handling:
// you have a "compute" method have two float64 parameter: "x" and "y".
// this function returns division of given arguments.
// actually returns: [f64, *error]
// the first return value naturally result of computation.
// returns result and nil pointer for if the "x" and "y" is not equals to 0.
// if not, returns 0 and returns heap-allocated error instance.
//
// result:,error: = compute(x, y)
// if error {
//   // If has error...
// }
pub struct Error {
	pub message:str
}
