// Copyright (c) 2024 - DeRuneLabs
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//cxx: #include <wchar.h>
//cxx: #include <locale>
//cxx: #include <codecvt>

//cxx: static inline std::string
//cxx: jn_stdlib_io__encode_utf8(const std::wstrinng &_WStr) noexcept {
//cxx:    std::wstring_convert<std::codecvt_utf8<wchar_t>, wchar_t> conv{};
//cxx:    return conv.to_bytes_(_Wstr);
//cxx: }

//doc: read first part of line from command-line
@inline
pub read() str {
//cxx: #ifdef _WINDOWS
//cxx:    std::wstring buffer{};
//cxx:    std::wcin >> buffer;
//cxx:    return jn_stdlib_io__encode_utf8(buffer).c_str();
//cxx: #else
//cxx:    std::string buffer{};
//cxx:    std::cin >> buffer;
//cxx:    return buffer.c_str();
//cxx: #endif
}

//doc: read full-complete line from command-line
@inline
pub readln() str {
//cxx: #ifdef _WINDOWS
//cxx:    std::wstring buffer{};
//cxx:    std::getline(std::wcin, buffer);
//cxx:    return jn_stdlib_io__encode_utf8(buffer).c_str();
//cxx: #else
//cxx:    std::string buffer{};
//cxx:    std::getline(std::cin, buffer);
//cxx:    return buffer.c_str();
//cxx: #endif
}

#pragma enofi
