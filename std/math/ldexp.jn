// MIT License
// Copyright (c) 2024 - DeRuneLabs
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

//doc:
// inverse of frexp, return frac x 2 ** exp
pub ldexp(frac f64, exp int) f64 {
  match {
    case frac == 0:
      ret frac
    case isinf(frac, 0) || isnan(frac):
      ret frac
  }
  frac, e: = normalize(frac)
  exp += e
  x: = f64_bits(frac)
	exp += int(x>>shift)&mask - bias
  if exp < -1075 {
    ret copysign(0, frac)
  }
  if exp > 1023 {
    if frac < 0 {
      ret inf(-1)
    }
    ret inf(1)
  }
  m:f64 = 1
  if exp < -1022 {
    exp += 53
    m = 1.0 / (1 << 43) // 2**-53
  }
  x &= ^(MASK << SHIFT)
	x |= u64(exp+BIAS) << SHIFT
	ret m * f64_from_bits(x)
}
