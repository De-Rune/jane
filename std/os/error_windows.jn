// Copyright (c) 2024 arfy slowy - DeRuneLabs
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

use std::sys::{
	get_last_error,
	ERROR_ACCESS_DENIED,
	ERROR_FILE_NOT_FOUND,
	ERROR_NOT_READY,
	ERROR_INVALID_NAME,
	ERROR_PATH_NOT_FOUND
}

// return last os error by error number of windows
fn get_last_os_error_windows(): OsError {
  let err = get_last_error()
	match err {
	  | ERROR_ACCESS_DENIED:  ret OsError.Denied
	  | ERROR_PATH_NOT_FOUND: ret OsError.NotExist
	  | ERROR_NOT_READY:      ret OsError.Divice
	  | ERROR_INVALID_NAME:   ret OsError.NotExist
	  |:                      ret OsError.Ok
	}
}
