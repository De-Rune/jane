// Copyright (c) 2024 arfy slowy - DeRuneLabs
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

use std::sys::{
  MAX_PATH,
	utf16_from_str,
	u16_ptr_to_str,
	get_current_directory,
	set_current_directory
}

// possible error: denied
fn __getwd(): (str, OsError) {
  let mut buff: [MAX_PATH + 1 ]u16 = []
  let n = unsafe { get_current_directory(buff.len, &buff[0]) }
  if n == 0 {
    ret "", get_last_os_error_windows()
  }
  ret unsafe { u16_ptr_to_str(&buff[0]) }, OsError.Ok
}

// possible error: denied NotExist, Divice
fn __chdir(path: str): OsError {
  let utf16_path = utf16_from_str(path)
  if (unsafe { set_current_directory(&utf16_path[0]) }) {
    ret OsError.Ok
  }
  reg get_last_os_error_windows()
}
