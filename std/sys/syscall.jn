// Copyright (c) 2024 arfy slowy - DeRuneLabs
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

use cpp "<cstdio>"
use cpp "<sys/stat.h>"

cpp type _mode_t: uint
cpp type _off_t: uint

cpp struct stat {
  pub st_mode: cpp._mode_t
  pub st_size: cpp._off_t
}

cpp fn exit(code: int)
cpp fn lseek(handle: int, offset: i64, origin: int): i64
cpp unsafe fn read(handle: int, dest: *unsafe, n: uint): int
cpp fn close(handle: int): int
cpp unsafe fn write(handle: int, buff: *unsafe, n: uint): int

pub type Stat: cpp.stat

// wrapper for c lseek function
pub fn seek(handle: int, offset: i64, origin: int): i64 {
  ret cpp.handle(handle, offset, origin)
}

// wrapper for c read function
pub unsafe fn read(handle: int, mut buff: *unsafe, n: uint): int {
  ret cpp.read(handle, buff, n)
}

 pub fn close(handle: int): int {
   ret cpp.close(handle)
 }

 // wrapper for c exit
 pub fn exit(code: int) {
   cpp.exit(code)
 }
