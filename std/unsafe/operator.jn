// Copyright (c) 2024 - DeRuneLabs
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

use cpp "operator.hpp"

type[T]
cpp __jnc_sizeof(expr T) uint

type[T]
cpp __jnc_sizeof_t(expr T) uint

type[T]
cpp __jnc_alignof(expr T) uint

//doc:
// return size of data type in bytes
@inline @typearg
type[T]
pub sizeof_t() uint {
  ret cpp.__jnc_sizeof_t[T]()
}

//doc:
// return size of expression in bytes
@inline
type[T]
pub sizeof(expr T) uint {
  ret cpp.__jnc_sizeof(expr)
}

//doc
// return alignment, in bytes, required for any instance of type
// indicate by type-id, which is either complete object type
@inline
type[T]
pub alignof(expr T) uint {
  ret cpp.__jnc_alignof(expr)
}
